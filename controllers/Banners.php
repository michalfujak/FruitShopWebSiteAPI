<?php
/*
*  @Autor:        Michal Fujak
*  @version       2.0.150
*  @copyright     Michal Fujak - Programator
*  @framework     Enterprise 2.0
*  @license       http://www.dev-droid.sk
*  @this website  http://www.android.dev-droid.sk [ FruitShop webSite ]
*  @Copyring      01.05.2019 19:00
*  @File          controllers/Users.php
*  @Update        edit:    [n/a][n/a]  version[n/a] [n/a]
*/

namespace controllers;


use language\sk\exception\ExceptionListVariable;
use model\driver\DriverConnect;
use model\sql\SqlManager;
use model\table\Tables;

class Banners extends MappingBanners
{
    /**
     * @variable
     */
    public $sql;
    public $result;
    public $row;

    /**
     * @object
     */
    public $objConn;
    public $objStmt;
    public $sqlManager;
    public $banners;
    public $lang;
    public $objLang;

    /**
     * Banners constructor.
     */
    public function __construct()
    {
        parent::__construct();
        $this->objConn = new DriverConnect();
        $this->objStmt = $this->objConn->connectRealPDO();
        $this->sqlManager = new SqlManager(Tables::TABLE_BANNERS);
        $this->objLang = new ExceptionListVariable();
        $this->lang = array_merge($this->objLang->exceptionListBanner);

    }

    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
    }

    /**
     * @getLoadBanners
     * @return Observarble List<array>
     */
    public function getLoadBanners()
    {
        // Method load banner class
        try
        {
            $this->sql = $this->sqlManager->getSelectTrim() .
                $this->sqlManager->getStarTrim() .
                $this->sqlManager->getFromTrim() .
                $this->sqlManager->table . " " .
                $this->sqlManager->getOrderByTrim() . self::$id .
                $this->sqlManager->getLimitTrim() . ":" . self::$bannerLimit;
            $this->result = $this->objStmt->prepare($this->sql);
            // print var_dump($this->result);
            if(!$this->result)
            {
                print $this->lang['EXCEPTION_BANNER_ERROR_MESSAGE_10010'];
            }
            $this->result->bindValue(":" . self::$bannerLimit, self::$bannerValue, \PDO::PARAM_INT);
            $this->result->execute();
            $this->banners = array();
            while($item = $this->result->fetch(\PDO::FETCH_ASSOC))
            {
                $this->banners[] = $item;
            }
            return $this->banners;
        }
        catch(\Exception $e)
        {
            print $this->lang['EXCEPTION_BANNER_ERROR_MESSAGE_10012'];
        }
    }
}

?>
